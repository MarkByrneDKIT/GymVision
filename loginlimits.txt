router.post("/login", async (req, res) => {
  try {
    const { username } = req.body;

    if (loginAttempts[username] && loginAttempts[username].attempts >= maxAttempts) {
      const timeSinceLastAttempt = Date.now() - loginAttempts[username].timestamp;

      if (timeSinceLastAttempt < resetTime) {
        return res.status(429).json("Too many login attempts. Please try again later.");
      } else {
        loginAttempts[username].attempts = 0;
      }
    }

    const user = await User.findOne({ username });
    if (!user) {
      res.status(404).send("User does not exist");
      return;
    }

    const password = await User.findOne({ password: req.body.password });
    if (!password) {
      if (!loginAttempts[username]) {
        loginAttempts[username] = { attempts: 1, timestamp: Date.now() };
      } else {
        loginAttempts[username].attempts += 1;
        loginAttempts[username].timestamp = Date.now();
      }
      res.status(400).json("Incorrect password");
      return;
    }

    // If successful login, reset the attempts counter
    loginAttempts[username] = { attempts: 0, timestamp: Date.now() };

    res.status(200).json(user);
  } catch (err) {
    res.status(500).json(err);
  }
});